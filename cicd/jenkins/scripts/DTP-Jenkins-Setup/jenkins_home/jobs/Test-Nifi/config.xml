<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>3</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>TARGET_USERNAME</name>
          <description></description>
          <defaultValue>dtpuser</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TARGET_IP_ADDRESS</name>
          <description></description>
          <defaultValue>JP-DTP-NIFI-VM</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SOURCE_SOFTWARE_LOCATION</name>
          <description></description>
          <defaultValue>/var/lib/jenkins/Tools/nifi-1.9.2-bin.zip</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TARGET_SOFTWARE_LOCATION</name>
          <description></description>
          <defaultValue>/home/dtpuser</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>INSTALLATION_FILE_TO_RUN</name>
          <description></description>
          <defaultValue>/opt/dtpinstaller/installation/on-premises/vanilla/nifi/nifi_remote_installation.sh</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.plugins.disk__usage.DiskUsageProperty plugin="disk-usage@0.28"/>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>
whoami &amp;&amp; hostname &amp;&amp; pwd

echo &quot;Running SCP to transfer file to Remote Server:&quot;$TARGET_USERNAME@$TARGET_IP_ADDRESS

#scp -v /var/lib/jenkins/Tools/nifi-1.9.2-bin.zip azureadmin@JP-DTP-NIFI-VM:/home/azureadmin
scp $SOURCE_SOFTWARE_LOCATION $TARGET_USERNAME@$TARGET_IP_ADDRESS:$TARGET_SOFTWARE_LOCATION
scp $INSTALLATION_FILE_TO_RUN $TARGET_USERNAME@$TARGET_IP_ADDRESS:$TARGET_SOFTWARE_LOCATION
</command>
    </hudson.tasks.Shell>
    <org.jvnet.hudson.plugins.SSHBuilder plugin="ssh@2.6.1">
      <siteName>dtpuser@JP-DTP-NIFI-VM:22</siteName>
      <command>whoami
pwd
hostname
echo &quot;Installing Nifi on Remote sever &quot;
ls -latr &amp;&amp; ./nifi_remote_installation.sh
</command>
      <execEachLine>false</execEachLine>
      <hideCommand>false</hideCommand>
    </org.jvnet.hudson.plugins.SSHBuilder>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>